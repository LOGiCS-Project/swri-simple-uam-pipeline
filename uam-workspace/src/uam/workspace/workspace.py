from attrs import define, field
from util.config import Config
from uam.config import UamWorkspaceConfig
# from uam.aam import Assembly
from pathlib import Path
from typing import Optional, Union

@define
class Assembly():
    """ Placeholder for ADM file rep. """
    pass

@define
class UamWorkspace():

    workspace_dir : Path = field()
    """
    The directory this particular workspace is in.
    """

    def init_workspace(self):
        """
        Initialize the workspace.
        """
        pass

    def reset_workspace(self):
        """
        Reset the workspace after some operations.
        """
        pass

    def set_assembly(self, assembly : Union[Assembly, Path]):
        """
        Set the inputADM.adm file from the provided assembly object, or
        copy another adm file into the correct place.
        """
        pass

    def adm_param_sync(self, pet_path : str, num_samples : int, design_vars: dict):
        """execADMParamSync.bat"""

        newProj_mga = self.modify_petdv(pet_path, num_samples, design_vars)

        run_auto_json, run_auto_log = self.run_mi_for_pet_sync(pet_path)


    def modify_petdv(self,
                     pet_path : str,
                     num_samples : int,
                     design_vars: dict):
        """
        modifyPETDV.py

        adds the current adm file to the openMETA design space w/ the given
        design vars.

        inp:
          - proj_auto.mga
          - inputADM.adm

        out:
          - new_proj.mga
        """
        pass

    def run_mi_for_pet_sync(self,
                            pet_path : str):
        """
        runMIforPETSync.py

        in:
          - newProj.mga

        out:
          - runAuto.json
          - runAuto.log
          - {PROJECT_CONN_STR}_pet_debug.mga
          - execPET.bat
          - packageREsults.bat
          - packageResultsViz.bat
          - packageResultss3.bat

        The packageResults*.bat scrpits bundle some subset of the following:
          - ./ADM/*
          - ./vizTemplate/*
          - ./componentMap.json
          - ./connectionMap.json
          - ./parameterMap.json
          - output*.csv
          - data.zip
          - artifacts
          - inputADM.adm
          - namedGraph.graphml
          - launch.cmd
          - visualizer.vizconfig
        """
        pass

    def run_fdm(self):
        """
        fly-dyn/run_fd_calc.py

        in:
          - testbench_mainfest.json
          - ../aero_info.json
          - connMap.json

        intermediate:
          - flightdyn.inp

        out:
          - geom.sty
          - flightdynout.out
          - testbench_mainfest.json
        """
        pass



    def exec_compute(self):
        """
        execPET.bat

        generated by run_MI_for_PET_SYNC.py

        runs the openMETA testbench executor

        in:
          - testbench_manifest.json

        out:
          - ??
        """
        pass

    def bundle_archive(self):
        """ packageResultss3.bat """
        pass


    def uam_direct2cad(self):
        """
        Files here are from the uam_direct2cad repo
        """
        pass

    def start_creo(self):
        """
        d2c/start_creo.py

        tries to start creo, waits 30s, tries to start creoson
        """
        pass

    def start_creoson(self):
        """
        d2c/start_creoson.bat (Somewhere??)
        """
        pass

    def run_analysis_d2c(self):
        """
        d2c/runanalysis.bat
        d2c/buildCad.py

        in:
          - f_cadprops = open('info_componentCADProps2.json',)
          - f_connects = open('info_connectionCADMap3.json',)
          - f_cadparams = open('info_componentCADParams5.json',)
          - f_sysparams = open('info_paramMap4.json',)
          - f_allconnects = open('info_connectionMap6.json',)
          - f_allprops = open('info_componentProps7.json',)
          - f_allparams = open('info_componentParams8.json',)
          - wing_file = './Tables/aero_info.json'




        desFiles = ["info_componentMapList1.json","info_paramMap4.json","info_connectionMap6.json", "info_componentProps7.json","info_componentParams8.json","study_params.csv","output.csv","launchViz.cmd"]
        """
        pass
