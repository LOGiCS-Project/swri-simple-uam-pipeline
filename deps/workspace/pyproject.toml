[build-system]
requires = ["pdm-pep517>=0.12.0"]
build-backend = "pdm.pep517.api"

[project]
name = "simpleuam-workspace"
description = "Manages various actions to manipulate designs and run them through cad generation, FDM, and other processes. Also handles creating worker nodes for server interactions."
authors = [
    {name = "Rohit Ramesh", email = "rkr@berkeley.edu"}
]
readme = "README.md"
requires-python = ">=3.9,<3.10"
version = "0.0.1"
license = { text = "UNSPECIFIED" }
dependencies = [
    "simpleuam-util @ file:///${PROJECT_ROOT}/deps/util",
    "omegaconf>=2.2.0",
    "attrs>=21.4.0",
    "invoke>=1.7.0",
    "structlog>=21.5.0",
    "rich>=12.4.1",
    "colorama>=0.4.4",
    "filelock>=3.7.0"]

[project.scripts]
workspace-mgr = "uam_workspace.cli:main"

[tool.pdm.scripts]
check = {call = "util.dev.cli:main(['pdm run check','check'])"}
check-quality = {call = "util.dev.cli:main(['pdm run check-quality','check-quality'])"}
check-types = {call = "util.dev.cli:main(['pdm run check-types','check-types'])"}
clean = {call = "util.dev.cli:main(['pdm run clean','clean'])"}
reset-pdm = {call = "util.dev.cli:main(['pdm run reset-pdm','reset-pdm'])"}
format = {call = "util.dev.cli:main(['pdm run format','format'])"}
test = {call = "util.dev.cli:main(['pdm run test','test'])"}
coverage = {call = "util.dev.cli:main(['pdm run coverage','coverage'])"}
[tool.pdm]
editable-backend = "editables"

[tool.pdm.dev-dependencies]
editable = [
    "-e file:///${PROJECT_ROOT}/deps/util#egg=simpleuam-util",
]
format = [
    "autoflake>=1.4",
    "black>=21.10b0",
    "isort>=5.10",
]
quality = [
    "darglint>=1.8",
    "flake8-bandit>=2.1",
    "flake8-black>=0.2",
    "flake8-bugbear>=21.9",
    "flake8-builtins>=1.5",
    "flake8-comprehensions>=3.7",
    "flake8-docstrings>=1.6",
    "flake8-pytest-style>=1.5",
    "flake8-string-format>=0.3",
    "flake8-tidy-imports>=4.5",
    "flake8-variables-names>=0.0",
    "pep8-naming>=0.12",
    "wps-light>=0.15",
]
tests = [
    "pytest>=6.2",
    "pytest-cov>=3.0",
    "pytest-randomly>=3.10",
    "pytest-xdist>=2.4",
]
typing = [
    "mypy>=0.910",
    "types-markdown>=3.3",
    "types-toml>=0.10",
]

[tool.black]
line-length = 120
exclude = "tests/fixtures"

[tool.isort]
line_length = 120
multi_line_output = 3
force_single_line = false
balanced_wrapping = true
default_section = "THIRDPARTY"
known_first_party = ""
include_trailing_comma = true
